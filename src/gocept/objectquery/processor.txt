==============================================
Querying objects with regular path expressions
==============================================

You create a QueryProcessor like this:

    >>> from gocept.objectquery.pathexpressions import RPEQueryParser
    >>> from gocept.objectquery.collection import ObjectCollection
    >>> from gocept.objectquery.processor import QueryProcessor
    >>> parser = RPEQueryParser()
    >>> objects = ObjectCollection()
    >>> query = QueryProcessor(parser, objects)
    >>> query
    <gocept.objectquery.processor.QueryProcessor object at 0x...>

Fill the collection with some examples:

    >>> class Telephone(object):
    ...     def __init__(self, number=""):
    ...         self.number = number
    >>> class Person(object):
    ...     def __init__(self, name=""):
    ...         self.name = name
    >>> class Address(object):
    ...     def __init__(self, street="", city=""):
    ...         self.street = street
    ...         self.city = city

Now fill the classes with some data:

    >>> a1 = Address(street="Forsterstrasse", city="Halle")
    >>> a2 = Address(street="Meckelstrasse", city="Halle")
    >>> objects.add(a1)
    >>> objects.add(a2)
    >>> p1 = Person(name="Theuni")
    >>> p2 = Person(name="coco")
    >>> p3 = Person(name="nilo")
    >>> p4 = Person(name="Basti")
    >>> p5 = Person(name="Basti")
    >>> objects.add(p1, a1)
    >>> objects.add(p2, a1)
    >>> objects.add(p3, a1)
    >>> objects.add(p4, a1)
    >>> objects.add(p5, a2)
    >>>
    >>> objects.add(Telephone(number="2298892"), p1)
    >>> objects.add(Telephone(number="2298890"), p2)
    >>> objects.add(Telephone(number="2298891"), p2)
    >>> objects.add(Telephone(number="2298894"), p3)
    >>> objects.add(Telephone(number="22988912"), p4)
    >>> objects.add(Telephone(number="342263"), p5)

Root joins:

    >>> r = query('/Address')
    >>> len(r)
    2
    >>> r = query('/Telephone')
    >>> len(r)
    0

Give all Telephones that are direct childs of Adresses:

    >>> r = query('Address/Telephone')
    >>> len(r)
    0

Give the Telephone of all Persons named "coco":

    >>> r = query('Address/Person[@name="coco"]/Telephone')
    >>> len(r)
    2
    >>> r[0].number
    '2298890'

Give all Persons, that live in "Forsterstrasse":

    >>> r = query('Address[@street="Forsterstrasse"]/Person*')
    >>> len(r)
    4

Give the Telephones the Adress, which is in "Halle" and has only one Person:

    >>> r = query('Address[@city="Halle"]/Person?/Telephone')
    >>> len(r)
    1
    >>> r[0].number
    '342263'
