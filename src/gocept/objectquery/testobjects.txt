============
Testdatabase
============

Introducing the classes
=======================

For the test-db used in the objectquery tests some classes are defined. It is a
library database with libraries, books and persons, which lent books from
libraries:

>>> from gocept.objectquery import testobjects
>>> testobjects.Library
<class 'gocept.objectquery.testobjects.Library'>

Lets initialize a Library. We must provide a location:

>>> dd_library = testobjects.Library(location="Dresden")
>>> dd_library.location
'Dresden'

The books attribute contains all books in the library:

>>> dd_library.books
[]


In addition, there are Book and Person classes in the testdb:

>>> testobjects.Book
<class 'gocept.objectquery.testobjects.Book'>

>>> testobjects.Person
<class 'gocept.objectquery.testobjects.Person'>

Books need an authors, a title and an isbn number:

>>> gier = testobjects.Book(
...         author=testobjects.Person(name='Kerstin Gier'),
...         title='GegensÃ¤tze ziehen sich aus',
...         written=2008,
...         isbn=3404159063)

>>> gier
<gocept.objectquery.testobjects.Book object at 0x...>
>>> gier.author.name
'Kerstin Gier'
>>> gier.title
'Gegens\xc3\xa4tze ziehen sich aus'
>>> gier.isbn
3404159063L

Persons only have a name:

>>> manuela = testobjects.Person(name='Manuela')

>>> manuela
<gocept.objectquery.testobjects.Person object at 0x...>
>>> manuela.name
'Manuela'


Introducing the database
========================

The test database contains 3 libraries:

>>> from gocept.objectquery.testobjects import librarydb
>>> from pprint import pprint
>>> len(librarydb)
3
>>> [library.location for library in librarydb]
['Halle', 'Berlin', 'Chester']

Lets have a closer look to the libraries. First, we define ha helper method
which returns us some details for a book:

>>> def show_book_info(book):
...     return '%s: %s' % (book.title, book.author.name)

The libraries have the following books:

>>> halle = librarydb[0]
>>> halle.location
'Halle'
>>> len(halle.books)
4
>>> pprint([show_book_info(book) for book in halle.books])
['1984: George Orwell',
 'Plone-Benutzerhandbuch: Thomas Lotze',
 'Farm der Tiere: George Orwell',
 'Web Component Development with Zope 3: Philipp von Weitershausen']

>>> berlin = librarydb[1]
>>> berlin.location
'Berlin'
>>> len(berlin.books)
5
>>> pprint([show_book_info(book) for book in berlin.books])
['1984: George Orwell',
 'Plone-Benutzerhandbuch: Thomas Lotze',
 'Faust: Johann Wolfgang von Goethe',
 'Farm der Tiere: George Orwell',
 'Web Component Development with Zope 3: Philipp von Weitershausen']

>>> chester = librarydb[2]
>>> chester.location
'Chester'
>>> len(chester.books)
3
>>> pprint([show_book_info(book) for book in chester.books])
['1984: George Orwell',
 'Faust: Johann Wolfgang von Goethe',
 'Farm der Tiere: George Orwell']
