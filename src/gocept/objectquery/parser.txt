================================
Parsing regular path expressions
================================

Import the QueryParser:

 >>> from gocept.objectquery.pathexpressions import QueryParser
 >>> p = QueryParser()

Some positive RPE-Tests:

 >>> p.parse('/foo?')
 [{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'foo'}, {'OCC_NONE_OR_ONE': '?'}]]
 >>> p.parse('foo/bar*[@a="b"]')
 [[{'IDENTIFIER': 'foo'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'bar'}, {'OCC_MULTI': '*'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'a'}, {'ATTRVALUE': 'b'}, {'PREDICATE_END': ']'}]]
 >>> p.parse('/foo[@a="b"]/_*/bar+[@a2="b2 b3"]/fou')
 [{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'foo'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'a'}, {'ATTRVALUE': 'b'}, {'PREDICATE_END': ']'}], {'PATH_SEPERATOR': '/'}, [{'WILDCARD': '_'}, {'OCC_MULTI': '*'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'bar'}, {'OCC_ONE_OR_MORE': '+'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'a2'}, {'ATTRVALUE': 'b2 b3'}, {'PREDICATE_END': ']'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'fou'}]]
 >>> p.parse('/foo[@a="b"]/_*/bar+[@a2="b2 b3"]/fou')
 [{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'foo'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'a'}, {'ATTRVALUE': 'b'}, {'PREDICATE_END': ']'}], {'PATH_SEPERATOR': '/'}, [{'WILDCARD': '_'}, {'OCC_MULTI': '*'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'bar'}, {'OCC_ONE_OR_MORE': '+'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'a2'}, {'ATTRVALUE': 'b2 b3'}, {'PREDICATE_END': ']'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'fou'}]]
 >>> p.parse('(/E1/E2)?/E3((/E4[@A="v"])|(E5/_*/E6))')
 [[{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E1'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E2'}]], {'OCC_NONE_OR_ONE': '?'}, {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E3'}], [[{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E4'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'A'}, {'ATTRVALUE': 'v'}, {'PREDICATE_END': ']'}]], {'UNION': '|'}, [[{'IDENTIFIER': 'E5'}], {'PATH_SEPERATOR': '/'}, [{'WILDCARD': '_'}, {'OCC_MULTI': '*'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E6'}]]]]
 >>> p.parse('(((((E1)|(E2))|(E3/E4))|(E5/E6/E7))|(E7/E8))')
 [[[[[[[{'IDENTIFIER': 'E1'}]], {'UNION': '|'}, [[{'IDENTIFIER': 'E2'}]]], {'UNION': '|'}, [[{'IDENTIFIER': 'E3'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E4'}]]], {'UNION': '|'}, [[{'IDENTIFIER': 'E5'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E6'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E7'}]]], {'UNION': '|'}, [[{'IDENTIFIER': 'E7'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E8'}]]]]
 >>> p.parse('(a|b)|c')
 [[[{'IDENTIFIER': 'a'}], {'UNION': '|'}, [{'IDENTIFIER': 'b'}]], {'UNION': '|'}, [{'IDENTIFIER': 'c'}]]
 >>> p.parse('a[@b="\"abc\""]')
 [[{'IDENTIFIER': 'a'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'b'}, {'ATTRVALUE': '"abc"'}, {'PREDICATE_END': ']'}]]


Some negative RPE-Tests:

 >>> p.parse('')
 Traceback (most recent call last):
 ...
 SyntaxError: ...
 >>> p.parse('/')
 Traceback (most recent call last):
 ...
 SyntaxError: ...
 >>> p.parse('foo/')
 Traceback (most recent call last):
 ...
 SyntaxError: ...
 >>> p.parse('foo[a="v"]')
 Traceback (most recent call last):
 ...
 SyntaxError: ...
 >>> p.parse('((abc/def)|(ghi/jkl)')
 Traceback (most recent call last):
 ...
 SyntaxError: ...

No parsing:

 >>> p.parse('/foo*')
 [{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'foo'}, {'OCC_MULTI': '*'}]]
 >>> p.parse('/foo*/bar')
 [{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'foo'}, {'OCC_MULTI': '*'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'bar'}]]
 >>> p.parse('/foo?[@A="v"]')
 [{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'foo'}, {'OCC_NONE_OR_ONE': '?'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'A'}, {'ATTRVALUE': 'v'}, {'PREDICATE_END': ']'}]]
 >>> p.parse('(foo/bar)')
 [[[{'IDENTIFIER': 'foo'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'bar'}]]]
 >>> p.parse('(foo/bar)|(foo/bar)')
 [[[{'IDENTIFIER': 'foo'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'bar'}]], {'UNION': '|'}, [[{'IDENTIFIER': 'foo'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'bar'}]]]
 >>> p.parse('(/E1/E2)?/E3((/E4[@A="v"])|(E5/_*/E6))')
 [[{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E1'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E2'}]], {'OCC_NONE_OR_ONE': '?'}, {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E3'}], [[{'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E4'}, {'PREDICATE_BEGIN': '[@'}, {'IDENTIFIER': 'A'}, {'ATTRVALUE': 'v'}, {'PREDICATE_END': ']'}]], {'UNION': '|'}, [[{'IDENTIFIER': 'E5'}], {'PATH_SEPERATOR': '/'}, [{'WILDCARD': '_'}, {'OCC_MULTI': '*'}], {'PATH_SEPERATOR': '/'}, [{'IDENTIFIER': 'E6'}]]]]
