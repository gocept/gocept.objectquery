==================
Using IndexSupport
==================

ClassIndex
==========

First init the ZODB:

    >>> from ZODB import FileStorage, DB
    >>> storage = FileStorage.FileStorage('/tmp/test-filestorage.fs')
    >>> db = DB(storage)
    >>> conn = db.open()
    >>> from persistent import Persistent
    >>> dbroot = conn.root()

Then get a ClassIndex object:

    >>> from gocept.objectquery.indexsupport import ClassIndex
    >>> ci = ClassIndex(dbroot)

ClassIndex's index is a BTrees.OOBTree object:

    >>> ci.index
    <BTrees.OOBTree.OOBTree object at 0x...>

Insert some data into the ClassIndex:

    >>> class Student(object):
    ...     pass
    >>> class Kurs(object):
    ...     pass

    >>> stud1 = Student()
    >>> stud1._p_oid = 1
    >>> ci.insert("Student", stud1)
    >>> stud2 = Student()
    >>> stud2._p_oid = 2
    >>> ci.insert("Student", stud2)
    >>> kurs1 = Kurs()
    >>> kurs1._p_oid = 3
    >>> ci.insert("Kurs", kurs1)

Validate, that the data has been correct stored:

    >>> ci.index.has_key('Student')
    2
    >>> list(ci.index['Student'])
    [1, 2]
    >>> ci.index.has_key('Kurs')
    2
    >>> list(ci.index['Kurs'])
    [3]

Delete some items from the index:

    >>> ci.delete("Student", stud1)
    >>> list(ci.index['Student'])
    [2]
    >>> ci.delete("Student", stud1)
    Traceback (most recent call last):
    ...
    KeyError: 1

AttributeIndex
==============

AttributeIndex works the same as the ClassIndex, so it is ok to only test if
we can get it:

    >>> from gocept.objectquery.indexsupport import AttributeIndex
    >>> ai = AttributeIndex(dbroot)

Lets have a look on our dbroot object:

    >>> dbroot.has_key('AttributeIndex')
    True
    >>> dbroot.has_key('ClassIndex')
    True
